{"version":3,"sources":["container/TimeSelection/TimeSelection.module.scss","components/InfoPage/InfoPage.module.scss","Layout/TimeSelectLayout.module.scss","App.module.scss","components/TeacherDiv/TeacherDiv.module.scss","container/TeacherSelection/TeacherSelection.module.scss","components/customArrows/CustomNextArrow.module.scss","components/customArrows/CustomPrevArrow.module.scss","container/MonthSlider/MonthSlider.module.scss","components/CustomSlide/CustomSlide.module.scss","UI/Button/Button.module.scss","welcome.png","UI/Loading/Loading.module.scss","UI/Spinner/spinner.module.scss","container/SimpleSlider/SimpleSlider.module.scss","UI/Backdrop/Backdrop.module.scss","selectMaster.png","components/InfoPage/cities.js","components/InfoPage/ages.js","UI/Button/Button.js","components/InfoPage/InfoPage.js","components/TeacherDiv/TeacherDiv.js","UI/Loading/Loading.js","UI/Spinner/spinner.js","hoc/aux.js","container/TeacherSelection/TeacherSelection.js","components/customArrows/CustomNextArrow.js","components/customArrows/CustomPrevArrow.js","container/SimpleSlider/convert_dateObject_to_dateString.js","components/CustomSlide/CustomSlide.js","container/MonthSlider/MonthSlider.js","container/SimpleSlider/convert_dateString_to_dateObject.js","container/SimpleSlider/SimpleSlider.js","container/TimeSelection/TimeSelection.js","UI/Backdrop/Backdrop.js","Layout/TimeSelectLayout.js","App.js","store/action/actions.js","store/action/actionTypes.js","serviceWorker.js","store/reducer/reducer.js","index.js"],"names":["module","exports","cities","ages","button","props","className","classes","onClick","onClickHandler","style","backgroundColor","color","border","children","infoPage","cities_options","Object","keys","map","city","key","district_options","district","ages_options","age_range","onChangeHandler","e","type","RegExp","test","target","value","FormContainer","id","welcomePic","src","welcome_pic","InfoForm","infoTitle","unfilled_blanks","find","ele","required","autoComplete","placeholder","chineseName","name","InfoInput","onChange","phoneNumber","selectionBar","info","dropDownSelectHandler","gender","disabled","rightSelect","age","defaultValue","ButtonContainer","Button","preventDefault","nextStep","Footer","teacherDiv","script","intro_li","teacherIntro","split","intro","index","intro_words","replace","TeacherDiv","onSelectMasterGroup","masterGid","groupName","TeacherImg","imgSrc","alt","TeacherInfo","TeacherIntroContent","loading","ldsFacebook","spinner","ldsSpinner","aux","teachderSelection","state","teachersList","isLoading","picLoaded","onLoadHandler","setState","onLoadErrorHandler","this","fetch","method","headers","then","res","json","data","infos","catch","err","console","log","teacherDivs","length","forEach","masterGrp","push","group","image","descript","pageContent","PrevStepButton","prevStep","Loading","TeacherSelectionPage","onLoad","bind","onError","BannerImg","Component","customNextArrow","GridBox","ArrowContainer","nextArrow","customPrevArrow","prevArrow","convert_dateObject_to_dateString","dateObject","getFullYear","getMonth","getDate","customSlide","currentDay","getDay","converToString","selectedDate","CurrentDateSlide","slideIndex","selectDateHandler","setCurrentIndex","Slide","monthSlider","monthsList","settings","accessibility","infinite","speed","slidesToShow","slidesToScroll","swipe","arrows","CustomNextArrow","CustomPrevArrow","afterChange","monthList","selectMonthHandler","monthSlides","month","MonthSlide","MonthSlider","container","convert_dateString_to_dateObject","dateString","counter","year","Number","slice","date","Date","SimpleSlider","currentSlideIndex","onSelectDate","dateListArr","newDateListArrLength","dateTimeList","selectedGrp_datetime","currentIndex","slickGoTo","innerSliders","dateList","CustomSlide","slider","onSelectTimeHandler","SliderContainer","ref","TimeSelection","number","onSelectClassTimeHandler","onCancelClickHandler","cancelClassTimeHandler","selectedDate_timeList","classTime","masterList","masterID_list","masterName_list","doctor_time","includes","master_id","master_display_name","timePeriodDivs","time","TimePeriodDiv","InfoDiv","ReserveButton","makeReservation","no_res","timeList","morning","afternoon","evening","timePeriod","selectedDoctor","masterListDivs","phase","doctor","DoctorDiv","TitleBar","DoctorName","ButtonRow","TimePeriodButton","selectDoctorHandler","TimeDivsContainer","isFetchingTime","backdrop","Backdrop","TimeSelectLayout","selectedDate_object","timedata","selectedMonth","datetime_object","converToDateObject","time_list","setDateTimeString","datetime_string","convertToDateString","targetDate","datetime","phaseHandler","doctorId","lastStepHandler","params","gid","day","start_date","esc","encodeURIComponent","queryString","join","month_of_date","fetch_timedata","prevState","timeSelectLayout","isPending","error","backdropHandler","ErrorMessage","timeSelectTitle","YearAndMonthBar","YearBar","DateSliderContainer","liff","window","App","saved_data","dt","convertToString","line_id","phone","introducer","reservation_data","FormData","append","body","status","reservation_post_datetime","reservationObj","reservation_id","master","masterName","reservationFormData","closeWindow","setErrorMsg","error_message","initializeLIFF","init","a","getProfile","profile","setInfoContent","userId","line_data_status","is_black","sendMessages","text","step","InfoPage","TeacherSelection","errMsg","setSelectedDate_timeList","fetchTime","connect","dispatch","infoType","updatedValue","actions","language_of_name","event","selection_name","teacherName","datetimestring","isFetching","Boolean","location","hostname","match","initialState","masterId","reducer","action","cloned_state","info_validate","unfilled_infos","store","createStore","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14fee5fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimePeriodDiv\":\"TimeSelection_TimePeriodDiv__3FnlP\",\"InfoDiv\":\"TimeSelection_InfoDiv__1Kdfc\",\"ReserveButton\":\"TimeSelection_ReserveButton__RaiTe\",\"CancelButton\":\"TimeSelection_CancelButton__1FKoj\",\"ButtonContainer\":\"TimeSelection_ButtonContainer__uTNod\",\"DoctorDiv\":\"TimeSelection_DoctorDiv__2ikI5\",\"TitleBar\":\"TimeSelection_TitleBar__34QH-\",\"DoctorName\":\"TimeSelection_DoctorName__3hHgF\",\"TimeTitle\":\"TimeSelection_TimeTitle__2B0cF\",\"ButtonRow\":\"TimeSelection_ButtonRow__QFV3u\",\"TimePeriodButton\":\"TimeSelection_TimePeriodButton__k7PaC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormContainer\":\"InfoPage_FormContainer__3lf2Y\",\"InfoForm\":\"InfoPage_InfoForm__k-6hH\",\"infoTitle\":\"InfoPage_infoTitle__1VWR8\",\"InfoInput\":\"InfoPage_InfoInput__1b9MQ\",\"selectionBar\":\"InfoPage_selectionBar__3EYwV\",\"rightSelect\":\"InfoPage_rightSelect__rntUM\",\"welcomePic\":\"InfoPage_welcomePic__1HgFG\",\"ButtonContainer\":\"InfoPage_ButtonContainer__1gE8C\",\"Footer\":\"InfoPage_Footer__1Sx5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeSelectLayout\":\"TimeSelectLayout_timeSelectLayout__10i35\",\"timeSelectTitle\":\"TimeSelectLayout_timeSelectTitle__EQJIF\",\"spaceDiv\":\"TimeSelectLayout_spaceDiv__J9Z8K\",\"DateSliderContainer\":\"TimeSelectLayout_DateSliderContainer__azi2l\",\"YearAndMonthBar\":\"TimeSelectLayout_YearAndMonthBar__2DO4I\",\"YearBar\":\"TimeSelectLayout_YearBar__20pM5\",\"TitleBar\":\"TimeSelectLayout_TitleBar__Hq5Hs\",\"ButtonContainer\":\"TimeSelectLayout_ButtonContainer__2hVxk\",\"ErrorMessage\":\"TimeSelectLayout_ErrorMessage__1hgiO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TeacherDiv\":\"TeacherDiv_TeacherDiv__1-UMf\",\"TeacherImg\":\"TeacherDiv_TeacherImg__1jhIO\",\"TeacherInfo\":\"TeacherDiv_TeacherInfo__2wpf7\",\"TeacherIntroContent\":\"TeacherDiv_TeacherIntroContent__3zhUf\",\"SelectedTeacherInfo\":\"TeacherDiv_SelectedTeacherInfo__3ErBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TeacherSelectionPage\":\"TeacherSelection_TeacherSelectionPage__3JpH3\",\"Banner\":\"TeacherSelection_Banner__2N36r\",\"PrevStepButton\":\"TeacherSelection_PrevStepButton__2Xw3-\",\"BannerImg\":\"TeacherSelection_BannerImg__20nvo\",\"ButtonContainer\":\"TeacherSelection_ButtonContainer__3C5YF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GridBox\":\"CustomNextArrow_GridBox__3Cz81\",\"ArrowContainer\":\"CustomNextArrow_ArrowContainer__w_XZm\",\"nextArrow\":\"CustomNextArrow_nextArrow__1YXlg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GridBox\":\"CustomPrevArrow_GridBox__XEqEt\",\"ArrowContainer\":\"CustomPrevArrow_ArrowContainer__1_VIZ\",\"prevArrow\":\"CustomPrevArrow_prevArrow__NSbZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthSlider\":\"MonthSlider_MonthSlider__1I5ND\",\"container\":\"MonthSlider_container__MX-jg\",\"MonthSlide\":\"MonthSlider_MonthSlide__233ln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Slide\":\"CustomSlide_Slide__6IXYD\",\"CurrentDateSlide\":\"CustomSlide_CurrentDateSlide__Lg6l6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1uK1w\"};","module.exports = __webpack_public_path__ + \"static/media/welcome.d4ee6e82.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsFacebook\":\"Loading_ldsFacebook__10ogl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsSpinner\":\"spinner_ldsSpinner__3ckY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SliderContainer\":\"SimpleSlider_SliderContainer__2hGow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3Mwgx\"};","module.exports = __webpack_public_path__ + \"static/media/selectMaster.09b4ec19.png\";","const cities = {\n    '台北市': [\n        '中正區', '大同區', '中山區', '萬華區', '信義區', '松山區', '大安區', '南港區', '北投區', '內湖區', '士林區', '文山區'\n    ],\n    '新北市': [\n        '板橋區', '新莊區', '泰山區', '林口區', '淡水區', '金山區', '八里區', '萬里區', '石門區', '三芝區', '瑞芳區', '汐止區', '平溪區', '貢寮區', '雙溪區', '深坑區', '石碇區', '新店區', '坪林區', '烏來區', '中和區', '永和區', '土城區', '三峽區', '樹林區', '鶯歌區', '三重區', '蘆洲區', '五股區'\n    ],\n    '基隆市': [\n        '仁愛區', '中正區', '信義區', '中山區', '安樂區', '暖暖區', '七堵區'\n    ],\n    '桃園市': [\n        '桃園區', '中壢區', '平鎮區', '八德區', '楊梅區', '蘆竹區', '龜山區', '龍潭區', '大溪區', '大園區', '觀音區', '新屋區', '復興區'\n    ],\n    '新竹縣': [\n        '竹北市', '竹東鎮', '新埔鎮', '關西鎮', '峨眉鄉', '寶山鄉', '北埔鄉', '橫山鄉', '芎林鄉', '湖口鄉', '新豐鄉', '尖石鄉', '五峰鄉'\n    ],\n    '新竹市': [\n        '東區', '北區', '香山區'\n    ],\n    '苗栗縣': [\n        '苗栗市', '通霄鎮', '苑裡鎮', '竹南鎮', '頭份鎮', '後龍鎮', '卓蘭鎮', '西湖鄉', '頭屋鄉', '公館鄉', '銅鑼鄉', '三義鄉', '造橋鄉', '三灣鄉', '南庄鄉', '大湖鄉', '獅潭鄉', '泰安鄉'\n    ],\n    '台中市': [\n        '中區', '東區', '南區', '西區', '北區', '北屯區', '西屯區', '南屯區', '太平區', '大里區', '霧峰區', '烏日區', '豐原區', '后里區', '東勢區', '石岡區', '新社區', '和平區', '神岡區', '潭子區', '大雅區', '大肚區', '龍井區', '沙鹿區', '梧棲區', '清水區', '大甲區', '外埔區', '大安區'\n    ],\n    '南投縣': [\n        '南投市', '埔里鎮', '草屯鎮', '竹山鎮', '集集鎮', '名間鄉', '鹿谷鄉', '中寮鄉', '魚池鄉', '國姓鄉', '水里鄉', '信義鄉', '仁愛鄉'\n    ],\n    '彰化縣': [\n        '彰化市', '員林鎮', '和美鎮', '鹿港鎮', '溪湖鎮', '二林鎮', '田中鎮', '北斗鎮', '花壇鄉', '芬園鄉', '大村鄉', '永靖鄉', '伸港鄉', '線西鄉', '福興鄉', '秀水鄉', '埔心鄉', '埔鹽鄉', '大城鄉', '芳苑鄉', '竹塘鄉', '社頭鄉', '二水鄉', '田尾鄉', '埤頭鄉', '溪州鄉'\n    ],\n    '雲林縣': [\n        '斗六市', '斗南鎮', '虎尾鎮', '西螺鎮', '土庫鎮', '北港鎮', '莿桐鄉', '林內鄉', '古坑鄉', '大埤鄉', '崙背鄉', '二崙鄉', '麥寮鄉', '臺西鄉', '東勢鄉', '褒忠鄉', '四湖鄉', '口湖鄉', '水林鄉', '元長鄉'\n    ],\n    '嘉義縣': [\n        '太保市', '朴子市', '布袋鎮', '大林鎮', '民雄鄉', '溪口鄉', '新港鄉', '六腳鄉', '東石鄉', '義竹鄉', '鹿草鄉', '水上鄉', '中埔鄉', '竹崎鄉', '梅山鄉', '番路鄉', '大埔鄉', '阿里山鄉'\n    ],\n    '嘉義市': [\n        '東區', '西區'\n    ],\n    '台南市': [\n        '中西區', '東區', '南區', '北區', '安平區', '安南區', '永康區', '歸仁區', '新化區', '左鎮區', '玉井區', '楠西區', '南化區', '仁德區', '關廟區', '龍崎區', '官田區', '麻豆區', '佳里區', '西港區', '七股區', '將軍區', '學甲區', '北門區', '新營區', '後壁區', '白河區', '東山區', '六甲區', '下營區', '柳營區', '鹽水區', '善化區', '大內區', '山上區', '新市區', '安定區'\n    ],\n    '高雄市': [\n        '楠梓區', '左營區', '鼓山區', '三民區', '鹽埕區', '前金區', '新興區', '苓雅區', '前鎮區', '小港區', '旗津區', '鳳山區', '大寮區', '鳥松區', '林園區', '仁武區', '大樹區', '大社區', '岡山區', '路竹區', '橋頭區', '梓官區', '彌陀區', '永安區', '燕巢區', '田寮區', '阿蓮區', '茄萣區', '湖內區', '旗山區', '美濃區', '內門區', '杉林區', '甲仙區', '六龜區', '茂林區', '桃源區', '那瑪夏區'\n    ],\n    '屏東縣': [\n        '屏東市', '潮州鎮', '東港鎮', '恆春鎮', '萬丹鄉', '長治鄉', '麟洛鄉', '九如鄉', '里港鄉', '鹽埔鄉', '高樹鄉', '萬巒鄉', '內埔鄉', '竹田鄉', '新埤鄉', '枋寮鄉', '新園鄉', '崁頂鄉', '林邊鄉', '南州鄉', '佳冬鄉', '琉球鄉', '車城鄉', '滿州鄉', '枋山鄉', '霧台鄉', '瑪家鄉', '泰武鄉', '來義鄉', '春日鄉', '獅子鄉', '牡丹鄉', '三地門鄉'\n    ],\n    '宜蘭縣': [\n        '宜蘭市', '羅東鎮', '蘇澳鎮', '頭城鎮', '礁溪鄉', '壯圍鄉', '員山鄉', '冬山鄉', '五結鄉', '三星鄉', '大同鄉', '南澳鄉'\n    ],\n    '花蓮縣': [\n        '花蓮市', '鳳林鎮', '玉里鎮', '新城鄉', '吉安鄉', '壽豐鄉', '秀林鄉', '光復鄉', '豐濱鄉', '瑞穗鄉', '萬榮鄉', '富里鄉', '卓溪鄉'\n    ],\n    '台東縣': [\n        '臺東市', '成功鎮', '關山鎮', '長濱鄉', '海端鄉', '池上鄉', '東河鄉', '鹿野鄉', '延平鄉', '卑南鄉', '金峰鄉', '大武鄉', '達仁鄉', '綠島鄉', '蘭嶼鄉', '太麻里鄉'\n    ],\n    '澎湖縣': [\n        '馬公市', '湖西鄉', '白沙鄉', '西嶼鄉', '望安鄉', '七美鄉'\n    ],\n    '金門縣': [\n        '金城鎮', '金湖鎮', '金沙鎮', '金寧鄉', '烈嶼鄉', '烏坵鄉'\n    ],\n    '連江縣': [\n        '南竿鄉', '北竿鄉', '莒光鄉', '東引鄉'\n    ]\n}\n\nexport default cities;","const ages = [\n    \"16-20\",\n    \"20-25\",\n    \"26-30\",\n    \"31-35\",\n    \"36-40\",\n    \"41-45\",\n    \"45-50\",\n    \"51-55\",\n    \"56-60\",\n    \"61-65\",\n    \"66-70\",\n    \"71-75\",\n    \"75-80\"\n]\n\nexport default ages;","import React from 'react';\n\nimport classes from './Button.module.scss';\n\nconst button = (props) => {\n    return (\n        <button \n            className={classes.button}\n            onClick={props.onClickHandler}\n            style={{\n                \"backgroundColor\": props.backgroundColor,\n                \"color\": props.color,\n                \"border\": props.border\n            }}> \n            {props.children}\n        </button>\n    )\n}\n\nexport default button;","import React from 'react';\n\nimport cities from './cities';\nimport ages from './ages';\nimport Button from '../../UI/Button/Button';\n\nimport classes from './InfoPage.module.scss';\n\nimport welcome_pic from \"../../welcome.png\";\n\nconst infoPage = (props) => {\n    const cities_arr = Object.keys(cities);\n\n    const cities_options = cities_arr.map((city) => (\n        <option key={city}>{city}</option>\n    ));\n\n    let district_arr = null;\n    let district_options = [];\n\n    if( props.city ){\n        district_arr = cities[props.city];\n        district_options = district_arr.map((district) => (\n            <option key={district}>{district}</option>\n        ))\n    };\n\n    const ages_options = ages.map((age_range) => (\n        <option key={age_range}>{age_range}</option>\n    ))\n\n    const onChangeHandler = (e, type) => {\n        if ( type === 'phoneNumber' ){\n            const phoneNumber_pattern = new RegExp(\"^[0-9 +]+$\");\n            if ( phoneNumber_pattern.test(e.target.value) || e.target.value === ''){\n                props.onChangeHandler(e, type);\n            } else {\n                return ;\n            }\n        }\n\n        if ( type === 'chineseName'){\n            const pattern = new RegExp(\"[`~!@#$^&*()=|{}':;',\\\\[\\\\]<>/?~！@#￥……&*（）——|{}    【】‘；：”“'。，、？]\");\n\n            if ( pattern.test(e.target.value) ){\n                return ;\n            } else {\n                props.onChangeHandler(e, type);\n            }\n        }\n    }\n\n    return (\n        <div className={classes.FormContainer}>\n            <img id={classes.welcomePic} \n                src={welcome_pic}\n                src='https://hsintian.tk/static/media/welcome.d4ee6e82.png' \n                />\n            <h2>請輸入您的姓名</h2>\n            <form className={classes.InfoForm}>\n                <div className={classes.infoTitle}>\n                    <label>\n                        中文姓名\n                    </label>\n                    {   props.unfilled_blanks.find((ele) => { return ele === 'chineseName' }) ?\n                        <p>請填入您的中文名字</p>: null\n                    }\n                    <input\n                        required\n                        autoComplete='off'\n                        placeholder='必填'\n                        value={props.chineseName}\n                        name='chineseName'\n                        className={classes.InfoInput}\n                        onChange={(e) => onChangeHandler(e, 'chineseName')}/>\n                </div>\n                <div className={classes.infoTitle}>\n                    <label>\n                        手機號碼\n                    </label>\n                    {   props.unfilled_blanks.find((ele) => { return ele === 'phoneNumber' }) ?\n                        <p>請填入您的手機號碼</p>: null\n                    }\n                    <input\n                        required\n                        autoComplete='off'\n                        placeholder='必填'\n                        value={props.phoneNumber}\n                        name='phoneNumber'\n                        className={classes.InfoInput}\n                        onChange={(e) => onChangeHandler(e, 'phoneNumber')}/>\n                </div>\n                <div className={classes.infoTitle}>\n                    <label>介紹人</label>\n                    <input \n                        autoComplete='off'\n                        placeholder='若無則不填'\n                        className={classes.InfoInput}\n                        onChange={(e) => onChangeHandler(e, 'introducer')}/>\n                </div>\n                <div className={classes.selectionBar}>\n                    <select \n                        style={\n                            props.unfilled_blanks.find((info) => {\n                                return info === 'gender'\n                            })? {color: 'red'} : null\n                        }\n                        onChange={(e) => props.dropDownSelectHandler('gender', e.target.value)}\n                        value={props.gender || '性別'}>\n                        <option disabled>性別</option>\n                        <option>男性</option>\n                        <option>女性</option>\n                        <option>其他</option>\n                    </select>\n                    <select\n                        style={\n                            props.unfilled_blanks.find((info) => {\n                                return info === 'age'\n                            })? {color: 'red'} : null\n                        }\n                        className={classes.rightSelect}\n                        onChange={(e) => props.dropDownSelectHandler('age', e.target.value)}\n                        value={props.age || '年齡'}>\n                        <option disabled>年齡</option>\n                        {ages_options}\n                    </select>\n                </div>\n                <div className={classes.selectionBar}>\n                    <select \n                        style={\n                            props.unfilled_blanks.find((info) => {\n                                return info === 'city'\n                            })? {color: 'red'} : null\n                        }\n                        onChange={(e) => props.dropDownSelectHandler('city', e.target.value)} \n                        value={props.city || '城市'}>\n                        <option disabled>城市</option>\n                        {cities_options}\n                    </select>\n                    <select\n                        style={\n                            props.unfilled_blanks.find((info) => {\n                                return info === 'district'\n                            })? {color: 'red'} : null\n                        }                    \n                        className={classes.rightSelect}\n                        onChange={(e) => props.dropDownSelectHandler('district', e.target.value)} \n                        value={props.district || '區、鎮、鄉'}\n                        defaultValue=\"區、鎮、鄉\">\n                        <option disabled value='區、鎮、鄉'>區、鎮、鄉</option>\n                        {district_options}\n                    </select>\n                </div>\n                <div className={classes.ButtonContainer}>\n                    <Button\n                        onClickHandler={(e) => {\n                            e.preventDefault();\n                            props.nextStep();\n                        }}\n                        backgroundColor=\"#CC0000\"\n                        color=\"white\"\n                        border=\"none\">        \n                        下一步\n                    </Button>\n                </div>\n            </form>\n            <footer className={classes.Footer}></footer>\n        </div>\n    )\n}\n\nexport default infoPage;","import React from 'react';\n\nimport classes from './TeacherDiv.module.scss';\n\nconst teacherDiv = (props) => {\n\n    const lineBreak = (script) => {\n        const script_arr = script.split('\\r\\n');\n        return script_arr;\n    }\n\n    const intro_li = lineBreak(props.teacherIntro).map((intro, index) => {\n        let intro_words = null;\n        switch(index){\n            case 0: \n                intro_words = intro.replace('A:', ' ')\n                break;\n            case 1:\n                intro_words = intro.replace('B:', ' ')\n                break;\n            case 2:\n                intro_words = intro.replace('C:', ' ');\n                break;\n            case 3:\n                intro_words = intro.replace('D:', ' ');\n                break;\n            case 4:\n                intro_words = intro.replace('E:', ' ')\n                break;\n            case 5:\n                intro_words = intro.replace('F:', ' ')\n                break;\n            default:\n                return;\n        }\n        return (\n            <li>{intro_words}</li>\n        )\n    });\n\n    return (\n        <div \n            className={classes.TeacherDiv}\n            onClick={() => props.onSelectMasterGroup(props.masterGid, props.groupName)}>\n            <img className={classes.TeacherImg} src={'https://hsintian.tk/static/images/' + props.imgSrc} alt={`${props.imgSrc}`}/>\n            <div className={classes.TeacherInfo}>\n                <ul className={classes.TeacherIntroContent} style={{\"listStyleType\": \"none\"}}>\n                    {/* {props.teacherIntro} */}\n                    {intro_li}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default teacherDiv;","import React from 'react';\n\nimport classes from './Loading.module.scss';\n\nconst loading = (props) => {\n    return (\n        <div className={classes.ldsFacebook}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default loading;","import React from 'react';\n\nimport classes from './spinner.module.scss';\n\nconst spinner = () => {\n    return (\n        <div className={classes.ldsSpinner}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    )\n}\n\nexport default spinner;","const aux = (props) => {\n    return props.children;\n}\n\nexport default aux;","import React, { Component } from 'react';\n\nimport TeacherDiv from '../../components/TeacherDiv/TeacherDiv';\nimport Loading from '../../UI/Loading/Loading';\nimport Button from '../../UI/Button/Button';\nimport Spinner from '../../UI/Spinner/spinner';\nimport Aux from '../../hoc/aux';\n\nimport classes from './TeacherSelection.module.scss';\nimport selectMasterPic from \"../../selectMaster.png\";\nimport { encode } from 'punycode';\n\nclass teachderSelection extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    state = {\n        teachersList: [],\n        isLoading: false,\n        picLoaded: false\n    }\n\n    componentDidMount(){\n        this.setState({ isLoading: true });\n        fetch('https://hsintian.tk/api/group/get/ ', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n\n            this.setState({\n                teachersList: data.infos,\n                isLoading: false\n            })\n        })\n        .catch(err => console.log(err));\n    };\n\n    onLoadHandler = () => {\n        this.setState({\n            picLoaded: true\n        })\n    }\n\n    onLoadErrorHandler = () => {\n        this.setState({\n            picLoaded: true\n        });\n    }\n\n    render(){\n        let teacherDivs = [];\n    \n        if (this.state.teachersList.length !== 0){\n            this.state.teachersList.forEach((masterGrp, index) => {\n                teacherDivs.push(\n                    <TeacherDiv\n                        key={masterGrp.group}\n                        imgSrc={masterGrp.image}\n                        groupName={masterGrp.group}\n                        masterGid={masterGrp.id}\n                        teacherIntro={masterGrp.descript}\n                        onSelectMasterGroup={this.props.onSelectMasterGroup}\n                    />\n                )\n            })\n        }\n\n        let pageContent = (\n            <Aux>\n                <div className={classes.ButtonContainer}>\n                    <Button\n                            className={classes.PrevStepButton}\n                            onClickHandler={this.props.prevStep}\n                            color=\"white\"\n                            border=\"1px solid white\"\n                            backgroundColor=\"#CC0000\">\n                            上一步\n                    </Button>\n                </div>\n                {this.state.isLoading?\n                    <Loading />:\n                    teacherDivs\n                }\n            </Aux>\n        )\n\n        return (\n            <div className={classes.TeacherSelectionPage}>\n                <img \n                    onLoad={this.onLoadHandler.bind(this)}\n                    onError={() => console.log('error')}\n                    className={classes.BannerImg} \n                    src='https://hsintian.tk/static/media/selectMaster.09b4ec19.jpg' \n                    // src={selectMasterPic}\n                />\n                { this.state.picLoaded ? \n                    pageContent: null }\n            </div>\n        )\n    }\n}\n\nexport default teachderSelection;","import React from 'react';\n\nimport classes from './CustomNextArrow.module.scss';\n\nconst customNextArrow = (props) => {\n    return (\n        <div \n            className={classes.GridBox} \n            onClick={props.onClick}>\n            <div className={classes.ArrowContainer}>\n                <span className={classes.nextArrow}></span>\n            </div>\n        </div>\n    )\n}\n\nexport default customNextArrow;","import React from 'react';\n\nimport classes from './CustomPrevArrow.module.scss';\n\nconst customPrevArrow = (props) => {\n    return (\n        <div \n            className={classes.GridBox}\n            onClick={props.onClick}>\n            <div className={classes.ArrowContainer}>\n                <span className={classes.prevArrow}></span>\n            </div>\n        </div>\n    )\n}\n\nexport default customPrevArrow;","const convert_dateObject_to_dateString = (dateObject) => {\n    const year_string = `${dateObject.getFullYear()}`;\n\n    const month_string = (\n        dateObject.getMonth() + 1 >= 10?\n        `${dateObject.getMonth() + 1}`: '0' + `${dateObject.getMonth() + 1}`\n    )\n\n    const date_string = (\n        dateObject.getDate() >= 10?\n        `${dateObject.getDate()}`: '0' + `${dateObject.getDate()}`\n    )\n\n    const datetime_string = year_string + month_string + date_string;\n\n    return datetime_string;\n}\n\nexport default convert_dateObject_to_dateString;","import React from 'react';\n\nimport classes from './CustomSlide.module.scss';\n\nimport converToString from '../../container/SimpleSlider/convert_dateObject_to_dateString';\n\nconst customSlide = (props) => {\n    const ch_dayArr = [\n        '日',\n        'ㄧ',\n        '二',\n        '三',\n        '四',\n        '五',\n        '六',\n    ]\n\n    const currentDay = ch_dayArr[props.dateObject.getDay()];\n\n\n    if (converToString(props.dateObject) === converToString(props.selectedDate)){\n        return (\n            <div \n                className={classes.CurrentDateSlide}\n                onClick={() => {\n                    console.log(props.dateObject)\n                    console.log(props.slideIndex);\n                    props.selectDateHandler(props.dateObject);\n                    props.setCurrentIndex(props.slideIndex - 1)\n                }}>\n                <h5>\n                    {\n                        `${props.dateObject.getMonth()+1}` + '/' +\n                        `${props.dateObject.getDate()}` + \n                        `(${currentDay})`\n                    }\n                </h5>\n            </div>\n        )\n    } else {\n        return (\n            <div \n                className={classes.Slide}\n                onClick={() => {\n                        console.log(props.dateObject);\n                        console.log(props.slideIndex);\n                        props.selectDateHandler(props.dateObject);\n                        props.setCurrentIndex(props.slideIndex - 1);\n                    }\n                }\n                >\n                <h5>\n                    {\n                        `${props.dateObject.getMonth()+1}` + '/' +\n                        `${props.dateObject.getDate()}`\n                    }\n                </h5>\n            </div>\n        )\n    }\n}\n\nexport default customSlide;","import React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport CustomNextArrow from '../../components/customArrows/CustomNextArrow';\nimport CustomPrevArrow from '../../components/customArrows/CustomPrevArrow';\nimport CustomSlide from '../../components/CustomSlide/CustomSlide';\n\nimport classes from './MonthSlider.module.scss';\n\nclass monthSlider extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    state = {\n        monthsList: []\n    }\n\n    // componentDidMount(){\n    //     const monthList = []\n\n    //     if ( this.props.currentDate_object ){\n    //         for ( let i = 0; i < 20; i++){\n    //             const date_object = new Date(\n    //                 this.props.currentDate_object.getFullYear(),\n    //                 this.props.currentDate_object.getMonth() + i,\n    //                 1\n    //             )\n                \n    //             monthsList.push(date_object)\n    //         }\n\n    //         this.setState({ monthsList });\n    //     }\n    // }\n\n    render(){\n        const settings = {\n            accessibility: true,\n            infinite: false,\n            speed: 300,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            swipe: true,\n            arrows: true,\n            nextArrow: <CustomNextArrow />,     \n            prevArrow: <CustomPrevArrow />,\n            afterChange: (index) => {\n                console.log(this.props.monthList[index]);\n                this.props.selectMonthHandler(this.props.monthList[index]);\n            },\n        }\n\n        let monthSlides = [];\n\n        if ( this.props.monthList.length ){\n            monthSlides = this.props.monthList.map((month) => {\n                return (\n                    <div className={classes.MonthSlide}>\n                        {month}月\n                    </div>\n                )\n            })\n        }\n\n        return (\n            <div className={classes.MonthSlider}>\n                <div className={classes.container}>\n                    <Slider {...settings}>\n                        {monthSlides}\n                    </Slider>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default monthSlider;","const convert_dateString_to_dateObject = (dateString, counter) => {\n\n        const year = Number(dateString.slice(0, 4));\n        const month = Number(dateString.slice(4, 6));\n        const date = Number(dateString.slice(6, 8));\n    \n        if(counter && typeof(counter) === 'number'){\n            return new Date(year, month - 1, date + counter);\n        } else {\n            return new Date(year, month - 1, date)\n        }\n}\n\nexport default convert_dateString_to_dateObject;","import React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport CustomNextArrow from '../../components/customArrows/CustomNextArrow';\nimport CustomPrevArrow from '../../components/customArrows/CustomPrevArrow';\nimport CustomSlide from '../../components/CustomSlide/CustomSlide';\n\nimport convertToDateString from './convert_dateObject_to_dateString';\nimport converToDateObject from './convert_dateString_to_dateObject';\nimport intializeTimeList from './initializeTimeList';\n\nimport * as actions from '../../store/action/actions';\n\nimport classes from './SimpleSlider.module.scss';\n\n\nclass SimpleSlider extends Component {\n    state = {\n        currentSlideIndex: 0,\n        onSelectDate: '',\n        //array of producing innerSliders\n        dateListArr: [],\n        newDateListArrLength: 0,\n        //to store the freetimelist got from the api\n        dateTimeList: null,\n        selectedGrp_datetime: null,\n    }\n\n    render(){\n        let settings = {\n            accessibility: true,\n            infinite: false,\n            speed: 300,\n            slidesToShow: 3,\n            slidesToScroll: 3,\n            swipe: true,\n            arrows: true,\n            nextArrow: <CustomNextArrow />,     \n            prevArrow: <CustomPrevArrow />,\n            afterChange: (currentIndex) => {\n                console.log(currentIndex);\n                this.setState({\n                    currentSlideIndex: currentIndex\n                })\n            },\n            slickGoTo: !this.props.loading? this.state.slickGoTo : null\n        };\n\n        let innerSliders = null;\n\n        console.log(this.props.selectedDate)\n        \n        if (this.props.dateList.length){\n            innerSliders = this.props.dateList.map((ele, index) => {\n                return (\n                    <CustomSlide\n                        key={'sliderIndex' + index}\n                        dateObject={ele} \n                        selectedDate={this.props.selectedDate}\n                        selectDateHandler={this.props.selectDateHandler}\n                        onSelectDate={this.state.onSelectDate}\n                        slideIndex={index}\n                        // selectDateHandler={this.selectDateHandler}\n                        setCurrentIndex={() => this.slider.slickGoTo()}\n                        onSelectTimeHandler={this.props.onSelectTimeHandler}/>\n                )\n            })\n        }\n\n        return (\n            <div className={classes.SliderContainer}>\n                <Slider ref={ slider => (this.slider = slider)} {...settings} >\n                    {innerSliders}\n                </Slider>\n            </div>                \n        )\n    }\n}\n\nexport default SimpleSlider;","import React, { Component } from 'react';\n\nimport Loading from '../../UI/Loading/Loading';\n\nimport classes from './TimeSelection.module.scss';\n\nclass TimeSelection extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    componentDidMount(){\n        console.log('TimeSelection, componentDidMount', this.props.selectedDate_timeList);\n    }\n\n    onClickHandler = (e, number) => {\n        this.props.onSelectClassTimeHandler(e, number);\n    }\n\n    onCancelClickHandler = (e) => {\n        this.props.cancelClassTimeHandler(e);\n    }\n\n    render(){\n        const timePeriodArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n        console.log('timeSelection', this.props.classTime);\n        console.log(this.props.selectedDate_timeList);\n\n        let masterList = {\n            masterID_list: [],\n            masterName_list: []\n        }\n\n        if ( this.props.selectedDate_timeList ){\n            this.props.selectedDate_timeList.forEach(doctor_time => {\n                if ( !masterList.masterID_list.length ){\n                    masterList.masterID_list.push(doctor_time.master_id);\n                    masterList.masterName_list.push(doctor_time.master_display_name);\n                } else if ( !masterList.masterID_list.includes(doctor_time.master_id) ){\n                    masterList.masterID_list.push(doctor_time.master_id);\n                    masterList.masterName_list.push(doctor_time.master_display_name);\n                }\n            })\n        }\n        console.log(masterList);\n\n        let timePeriodDivs = [];\n\n\n        if(this.props.selectedDate_timeList !== 'no free time' && this.props.selectedDate_timeList){\n            this.props.selectedDate_timeList.map((time) => {\n                timePeriodDivs.push(\n                    <div className={classes.TimePeriodDiv}>\n                        <div className={classes.InfoDiv}>\n                            <p>{time.master_display_name}</p>\n                            <p>時間：{time.time}</p>\n                        </div>\n                        <p\n                            id={classes.ReserveButton}\n                            onClick={() => this.props.makeReservation(time.master_id, time.time)}>\n                            <u>預&nbsp;&nbsp;約</u>\n                        </p>\n                    </div>\n                )\n            })\n        }\n\n        let no_res = null;\n\n        let timeList = {\n            morning: [],\n            afternoon: [],\n            evening: []\n        }\n\n        if ( this.props.selectedDate_timeList !== 'no free time' && this.props.selectedDate_timeList ){\n            this.props.selectedDate_timeList.forEach(time => {\n                if ( Number(time.time) < 1200 && Number(time.time) >= 800){\n                    timeList.morning.push(time);\n                } else if ( Number(time.time) < 1600 && Number(time.time) >= 1200){\n                    timeList.afternoon.push(time);\n                } else if ( Number(time.time) < 2000 && Number(time.time) >= 1600){\n                    timeList.evening.push(time);\n                }\n            })\n        }\n\n        console.log('timePeriod', this.props.timePeriod);\n        if ( this.props.timePeriod.length ){\n            timePeriodDivs = timeList[this.props.timePeriod].map(time => {\n                if ( time.master_id === this.props.selectedDoctor ){\n                    return (\n                        <div className={classes.TimePeriodDiv}>\n                            <div className={classes.InfoDiv}>\n                                <p>{time.master_display_name}</p>\n                                <p>時間：{time.time}</p>\n                            </div>\n                            <p\n                                id={classes.ReserveButton}\n                                onClick={() => this.props.makeReservation(time.master_id, time.time)}>\n                                <u>預&nbsp;&nbsp;約</u>\n                            </p>\n                        </div>\n                    )\n                }\n            });\n            console.log(timePeriodDivs);\n        }\n\n        let masterListDivs = [];\n\n        if ( this.props.phase === 1 ){\n            if (this.props.no_res){\n                no_res = (\n                    <div>\n                        <h3>本月無可預約時段</h3>\n                    </div>\n                )\n            }\n\n            if ( masterList.masterID_list.length ){\n                console.log(timeList);\n                console.log(masterList);\n                masterList.masterName_list.forEach((doctor, index) => {\n                    console.log(doctor);\n                    masterListDivs.push(\n                        <div className={classes.DoctorDiv}>\n                            <div className={classes.TitleBar}>\n                            <p className={classes.DoctorName}>{doctor}</p>\n                            </div>\n                                <div className={classes.ButtonRow}>\n                                {\n                                    timeList.morning.find(time => time.master_display_name === doctor)? \n                                    (\n                                        <div \n                                            className={classes.TimePeriodButton}\n                                            onClick={() => this.props.selectDoctorHandler(masterList.masterID_list[index], 'morning')}>08:00 AM - 12:00 PM</div>\n                                    ):null\n                                }\n                                {\n                                    timeList.afternoon.find(time => time.master_display_name === doctor)? \n                                    (\n                                        <div \n                                            className={classes.TimePeriodButton}\n                                            onClick={() => this.props.selectDoctorHandler(masterList.masterID_list[index], 'afternoon')}>12:00 PM - 04:00 PM</div>\n                                    ):null\n                                }\n                                {\n                                    timeList.evening.find(time => time.master_display_name === doctor)? \n                                    (\n                                        <div \n                                        className={classes.TimePeriodButton}\n                                        onClick={() => this.props.selectDoctorHandler(masterList.masterID_list[index], 'evening')}>04:00 PM - 08:00 PM</div>\n    \n                                    ): null\n                                }\n                            </div>\n                        </div>\n                    )\n                })\n            }\n\n            return (\n                <div className={classes.TimeDivsContainer}>\n                    {masterListDivs}\n                    {no_res}\n                </div>\n            )\n        }\n\n        if (this.props.no_res){\n            no_res = (\n                <div>\n                    <h3>本月無可預約時段</h3>\n                </div>\n            )\n        }\n\n        if ( this.props.selectedDate_timeList === null || this.props.isFetchingTime === true ){\n            return (\n                <div className={classes.TimeDivsContainer}>\n                    <Loading />\n                </div>\n            )\n        } else {\n            return (\n                <div className={classes.TimeDivsContainer}>\n                    {timePeriodDivs}\n                    {no_res}\n                </div>\n            )\n        }\n    }\n}\n\nexport default TimeSelection;","import React from 'react';\n\nimport classes from './Backdrop.module.scss';\n\nconst backdrop = (props) => {\n    return (\n        <div \n            className={classes.Backdrop}\n            onClick={() => props.onClickHandler()}>\n        </div>\n    )\n}\n\nexport default backdrop;","import React, { Component } from 'react';\n\nimport MonthSlider from '../container/MonthSlider/MonthSlider';\nimport SimpleSlider from '../container/SimpleSlider/SimpleSlider';\nimport TimeSelection from '../container/TimeSelection/TimeSelection';\nimport Spinner from '../UI/Spinner/spinner';\nimport BackDrop from '../UI/Backdrop/Backdrop';\nimport Button from '../UI/Button/Button';\nimport Aux from '../hoc/aux';\n\nimport convertToDateString from '../container/SimpleSlider/convert_dateObject_to_dateString';\nimport converToDateObject from '../container/SimpleSlider/convert_dateString_to_dateObject';\n\nimport classes from './TimeSelectLayout.module.scss';\n\nclass TimeSelectLayout extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    state = {\n        selectedDate_object: new Date(),\n        timedata: [],\n        monthList: '',\n        dateList: [],\n        selectedMonth: '',\n        selectedDate: '',\n        timeList: '',\n        datetime_object: {},\n        loading: true,\n        phase: 1,\n        timePeriod: '',\n        selectedDoctor: ''\n    }\n\n    selectMonthHandler = (month) => {\n        console.log(month);\n\n        const dateList = this.state.datetime_object[month].map((date) => {\n            return converToDateObject(date.date);\n        })\n        console.log(dateList);\n\n        if (dateList.length){\n            console.log(dateList[0])\n            this.setState({\n                selectedMonth: month,\n                dateList,\n                selectedDate: dateList[0],\n                timeList: this.state.datetime_object[month][0].time_list\n            });\n\n            this.props.setDateTimeString(dateList[0])\n        } else {\n            this.setState({\n                selectedMonth: month,\n                dateList,\n                timeList: []\n            })\n        }\n    };\n\n    selectDateHandler = (date, index) => {\n        if (date === this.state.selectedDate){\n            return ;\n        };\n\n        const datetime_string = convertToDateString(date);\n\n        const targetDate = this.state.timedata.infos.datetime.find((date) => {\n            return date.date === datetime_string;\n        });\n\n\n        this.setState({\n            selectedDate: date,\n            timeList: targetDate.time_list\n        })\n\n        this.props.setDateTimeString(date);\n    }\n\n    phaseHandler = () => {\n        this.setState({\n            phase: 1\n        })\n    }\n\n    selectDoctorHandler = ( doctorId, timePeriod ) => {\n        this.setState({\n            selectedDoctor: doctorId,\n            timePeriod,\n            phase: 2\n        })\n    }\n\n    lastStepHandler = () => {\n        if ( this.state.phase === 1 ){\n            return this.props.prevStep();\n        } else {\n            this.setState({\n                phase: 1\n            })\n        }\n    }\n\n    componentDidMount(){\n        const fetch_timedata = () => {\n            const datetime_string = convertToDateString(new Date());\n\n            const params = {\n                gid: this.props.masterGid,\n                day: 60,\n                start_date: datetime_string\n            }\n\n            let esc = encodeURIComponent;\n            const queryString = Object.keys(params)\n                                    .map((ele) => esc(ele) + '=' + esc(params[ele])).join('&');\n            \n                                \n            fetch('https://hsintian.tk/api/freetime/get/?' + queryString, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(res => res.json())\n            .then(data => {\n                const firstDate = converToDateObject(data.infos.datetime[0].date);\n\n                const datetime_object = new Object();\n                \n                data.infos.datetime.forEach((date) => {\n                    const dateObject = converToDateObject(date.date);\n                    const month_of_date = dateObject.getMonth() + 1;\n                    \n                    if (!datetime_object[month_of_date]){\n                        datetime_object[month_of_date] = [];\n\n                        if (date.time_list.length){\n                            datetime_object[month_of_date].push(date);\n                        }\n                    } else {\n                        if (date.time_list.length){\n                            datetime_object[month_of_date].push(date);\n                        }\n                    }\n                });\n\n                const monthList = [];\n                for (let key in datetime_object){\n                    monthList.push(key);\n                }\n\n                const dateList = datetime_object[monthList[0]].map((date) => {\n                    return converToDateObject(date.date);\n                });\n\n                if (!dateList.length){\n                    this.setState({\n                        timedata: data,\n                        monthList,\n                        selectedMonth: monthList[0],\n                        dateList,\n                        datetime_object,\n                        loading: false\n                    })\n                } else {\n                    this.setState({\n                        timedata: data,\n                        monthList,\n                        selectedMonth: monthList[0],\n                        selectedDate: converToDateObject(datetime_object[monthList[0]][0].date),\n                        dateList,\n                        timeList: datetime_object[monthList[0]][0].time_list,\n                        datetime_object,\n                        loading: false\n                    });\n\n                    this.props.setDateTimeString(converToDateObject(datetime_object[monthList[0]][0].date));\n                }\n            })\n            .catch(err => console.log(err))\n        };\n\n        fetch_timedata();\n    };\n\n    componentDidUpdate(prevState){\n        console.log(this.state);\n    }\n    \n    render(){\n        console.log(this.props);\n        if (this.state.loading){\n            return (\n                <div className={classes.timeSelectLayout}>\n                    <Spinner />\n                </div>\n            )\n        }\n\n        return (\n            <div className={classes.timeSelectLayout}>\n                {\n                    this.props.isPending?\n                    (\n                        <Aux>\n                            <BackDrop />\n                            <Spinner />\n                        </Aux>\n                    ): null\n                }\n                {\n                    this.props.error?\n                    (\n                        <Aux>\n                            <BackDrop onClickHandler={this.props.backdropHandler}/>\n                            <div className={classes.ErrorMessage}>\n                                <p>{this.props.error}</p>\n                            </div>\n                        </Aux>\n                    ): null\n                }\n                \n                <div className={classes.TitleBar}>\n                    <div className={classes.ButtonContainer}>\n                        <Button\n                            onClickHandler={this.lastStepHandler.bind(this)}\n                            border=\"none\"\n                            backgroundColor=\"#CC0000\"\n                            color=\"white\">\n                            上一步\n                        </Button>\n                    </div>\n                    <div>\n                        <h2 id={classes.timeSelectTitle}>請選擇時間</h2>\n                    </div>\n                </div>\n                <div className={classes.YearAndMonthBar}>\n                    <h2 className={classes.YearBar}>\n                        { this.state.selectedDate_object ?\n                            `${this.state.selectedDate_object.getFullYear()}` + '年':\n                            null\n                        }\n                    </h2>\n                    <MonthSlider \n                        monthList={this.state.monthList}\n                        // currentDate_object={this.state.currentDate_object} \n                        selectMonthHandler={this.selectMonthHandler.bind(this)}/>\n                </div>\n                <div className={classes.DateSliderContainer}>\n                    <SimpleSlider \n                        loading={this.state.loading}\n                        dateList={this.state.dateList}\n                        selectedDate={this.state.selectedDate}\n                        selectDateHandler={this.selectDateHandler.bind(this)}/>\n                </div>\n                <TimeSelection\n                    selectedDate_timeList={this.state.timeList}\n                    no_res={!this.state.dateList.length}\n                    makeReservation={this.props.makeReservation}\n                    selectedDoctor={this.state.selectedDoctor}\n                    selectDoctorHandler={this.selectDoctorHandler}\n                    phase={this.state.phase}\n                    timePeriod={this.state.timePeriod}\n                />\n            </div>\n        )\n    }\n}\n\nexport default TimeSelectLayout;","import React, { Component } from 'react';\nimport classes from './App.module.scss';\nimport { connect } from 'react-redux';\n\nimport InfoPage from './components/InfoPage/InfoPage';\nimport TeacherSelection from './container/TeacherSelection/TeacherSelection';\nimport TimeSelectLayout from './Layout/TimeSelectLayout';\n\nimport * as actions from './store/action/actions';\n\nimport convertToString from './container/SimpleSlider/convert_dateObject_to_dateString';\n\nconst liff = window.liff;\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.initializeLIFF = this.initializeLIFF.bind(this);\n    }\n    \n    state = {\n        isPending: false,\n        error: null\n    }\n\n    componentDidMount(){\n        this.initializeLIFF();\n    }\n\n    makeReservation = (master_id, time) => {\n        this.setState({ isPending: true })\n        const datetime_string = convertToString(this.props.datetime_string) + time;\n        const saved_data = {\n            master_id: master_id,\n            dt: datetime_string,\n            line_id: this.props.line_id,\n            name: this.props.chineseName,\n            phone: this.props.phoneNumber,\n            introducer: this.props.introducer,\n            gender: this.props.gender,\n            age: this.props.age,\n            city: this.props.city,\n            district: this.props.district\n        };\n\n        const reservation_data = new FormData();\n        for ( let ele in saved_data){\n            reservation_data.append(ele, saved_data[ele]);\n        };\n\n        fetch('https://hsintian.tk/api/reservation/post', {\n            method: 'POST',\n            body: reservation_data\n        })\n        .then(res => res.json())\n        .then(data => {\n            if (data.status ==='success'){\n                const reservation_post_datetime = (\n                    data.info.datetime.slice(0, 4) + '/' +\n                    data.info.datetime.slice(4, 6) + '/' +\n                    data.info.datetime.slice(6, 8) + ' ' + \n                    data.info.datetime.slice(8, 10) + ':' +\n                    data.info.datetime.slice(10, 12)\n                );\n\n                const reservationObj = {\n                    line_id: data.info.line_id,\n                    reservation_id: data.info.reservation_id,\n                    name: data.info.name,\n                    datetime: reservation_post_datetime,\n                    master: this.props.masterName\n                }\n\n                const reservationFormData = new FormData();\n                for ( let ele in reservationObj){\n                    reservationFormData.append(ele, reservationObj[ele]);\n                };\n\n                return fetch('https://hsintian.tk/api/send_reservation/post', {\n                    method: 'POST',\n                    body: reservationFormData\n                })\n                .then(data => liff.closeWindow())\n                .catch(err => {\n                    this.props.setErrorMsg(`${err}`)\n                })\n            } else {\n                this.setState({\n                    error: data.error_message,\n                    isPending: false\n                })\n            }\n        })\n        .catch(err => console.log(err))\n    }\n\n    backdropHandler = () => {\n        this.setState({\n            error: null\n        })\n    }\n\n    initializeLIFF(){\n        liff.init( async data => {\n            const profile = await liff.getProfile();\n            this.props.setInfoContent('line_id', profile.userId);\n            this.props.setInfoContent('line_data_status', 'success');\n        }, err => {\n            console.log(err)\n        })\n    }\n\n    componentDidUpdate(){\n        if (this.props.line_id && this.props.line_data_status === 'success'){\n            fetch('https://hsintian.tk/api/customer/get/?line_id=' + this.props.line_id, {\n                method: 'get'\n            })\n            .then( res => res.json())\n            .then( data => {\n                if (data.info.is_black === true){\n                    liff.sendMessages([{\n                        type: 'text',\n                        text: '您之前因為有缺席紀錄，我們系統自動將您列入觀察名單，請您聯繫客服完成訂位喔'\n                    }])\n                    .then(() => liff.closeWindow())\n                    .catch(err => this.props.setErrorMsg(`${err}`));\n                } else {\n                    this.props.setInfoContent('chineseName', data.info.name);\n                    this.props.setInfoContent('phoneNumber', data.info.phone);\n                    this.props.setInfoContent('line_data_status', 'used');\n                    this.props.setInfoContent('city', data.info.city);\n                    this.props.setInfoContent('district', data.info.district);\n                    this.props.setInfoContent('age', data.info.age);\n                    this.props.setInfoContent('gender', data.info.gender);\n                }\n            })\n            .catch(err => this.props.setErrorMsg(`${err}`));\n        }\n    }\n\n    render(){\n        if (this.props.step === 'info_page'){\n            return (\n                <div className={classes.App}>\n                    <InfoPage \n                        onChangeHandler={this.props.onChangeHandler}\n                        dropDownSelectHandler={this.props.dropDownSelectHandler}\n                        chineseName={this.props.chineseName}\n                        phoneNumber={this.props.phoneNumber}\n                        city={this.props.city}\n                        district={this.props.district}\n                        gender={this.props.gender}\n                        age={this.props.age}\n                        nextStep={this.props.nextStep}\n                        unfilled_blanks={this.props.unfilled_blanks}/>ˋ\n                </div>\n            );\n        } else if (this.props.step === 'teacher_select'){\n            return (\n                <div className={classes.App}>\n                    <TeacherSelection\n                        masterGid={this.props.masterGid}\n                        onSelectMasterGroup={this.props.onSelectMasterGroup}\n                        nextStep={this.props.nextStep}\n                        prevStep={this.props.prevStep}/>\n                </div>\n            )\n        } else if (this.props.step === 'time_select'){\n            if (this.props.errMsg !== null){\n                return (\n                    <div className={classes.App}>\n                        <p>{this.props.errMsg}</p>\n                    </div>\n                )\n            } else {\n                return (\n                    <div className={classes.App}>\n                        <TimeSelectLayout\n                            isPending={this.state.isPending}\n                            error={this.state.error}\n                            backdropHandler={this.backdropHandler.bind(this)}\n                            isFetchingTime={this.props.isFetchingTime}\n                            prevStep={this.props.prevStep}\n                            masterGid={this.props.masterGid}\n                            datetime_string={this.props.datetime_string}\n                            setDateTimeString={this.props.setDateTimeString}\n                            selectedDate_timeList={this.props.selectedDate_timeList}\n                            setSelectedDate_timeList={this.props.setSelectedDate_timeList}\n                            makeReservation={this.makeReservation}\n                            fetchTime={this.props.fetchTime}/>\n                    </div>\n                )\n            }\n        } else if (this.props.step === 'finished'){\n            return (\n                <div className={classes.App}>\n                    <p>{this.props.errMsg}</p>\n                </div>\n            )\n        }\n    }n}\n\nconst mapStateToProps = state => {\n    return {\n        chineseName: state.chineseName,\n        phoneNumber: state.phoneNumber,\n        introducer: state.introducer,\n        city: state.city,\n        district: state.district,\n        gender: state.gender,\n        age: state.age,\n        unfilled_blanks: state.unfilled_blanks,\n        masterGid: state.masterGid,\n        masterName: state.masterName,\n        step: state.step,\n        selectedDate_timeList: state.selectedDate_timeList,\n        datetime_string: state.datetime_string,\n        line_id: state.line_id,\n        line_data_status: state.line_data_status,\n        errMsg: state.errMsg,\n        isFetchingTime: state.isFetchingTime\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setInfoContent: (infoType, updatedValue) => dispatch(actions.setInfoContent(infoType, updatedValue)),\n        onChangeHandler: (e, language_of_name) => dispatch(actions.onChangeHandler(e, language_of_name)),\n        dropDownSelectHandler: (selection_name, value) => dispatch(actions.DROP_DOWN_SELECT(selection_name, value)),\n        onSelectMasterGroup: (teacherName, masterName) => dispatch(actions.onSelectMasterGroup(teacherName, masterName)),\n        nextStep: () => dispatch(actions.nextStep()),\n        prevStep: () => dispatch(actions.prevStep()),\n        setDateTimeString: (datetimestring) => dispatch(actions.setDateTimeString(datetimestring)),\n        setSelectedDate_timeList: (timeList) => dispatch(actions.setSelectedDate_timeList(timeList)),\n        setErrorMsg: (errMsg) => dispatch(actions.setErrorMsg(errMsg)),\n        fetchTime: (isFetching) => dispatch(actions.fetchTime(isFetching))\n    }\n}\n \nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from './actionTypes';\n\nexport const setInfoContent = (infoType, updatedValue) => {\n    return {\n        type: actionTypes.SET_INFO_CONTENT,\n        infoType: infoType,\n        updatedValue: updatedValue\n    }\n}\n\nexport const onChangeHandler = (e, language_of_name) => {\n    return {\n        type: actionTypes.CHANGE_NAME,\n        language_of_name: language_of_name,\n        updatedValue: e.target.value,\n        event: e\n    }\n}\n\nexport const DROP_DOWN_SELECT = (selection_name, value) => {\n    return {\n        type: actionTypes.DROP_DOWN_SELECT,\n        selection_name: selection_name,\n        value: value\n    }\n}\n\nexport const onSelectMasterGroup = (masterGid, masterName) => {\n    console.log(masterName);\n    return {\n        type: actionTypes.SELECT_MASTER_GROUP,\n        masterGid: masterGid,\n        masterName: masterName\n    }\n}\n\nexport const nextStep = () => {\n    return {\n        type: actionTypes.NEXT_STEP,\n    }\n}\n\nexport const prevStep = () => {\n    return {\n        type: actionTypes.PREV_STEP\n    }\n}\n\nexport const setDateTimeString = (datetime_string) => {\n    return {\n        type: actionTypes.SET_DATE_TIME_STRING,\n        datetime_string: datetime_string\n    }\n}\n\nexport const setSelectedDate_timeList = (timeList) => {\n    return {\n        type: actionTypes.SET_SELECTED_DATE_TIME_LIST,\n        timeList: timeList\n    }\n}\n\nexport const setErrorMsg = ( errMsg ) => {\n    return {\n        type: actionTypes.SET_ERROR_MSG,\n        errMsg: errMsg\n    }\n}\n\nexport const fetchTime = (isFetching) => {\n    return {\n        type: actionTypes.FETCH_TIME,\n        isFetching: isFetching\n    }\n}","export const SET_INFO_CONTENT = 'SET_INFO_CONTENT';\nexport const CHANGE_NAME = 'CHANGE__NAME';\nexport const DROP_DOWN_SELECT = 'DROP_DOWN_SELECT';\nexport const SELECT_MASTER_GROUP = 'SELECT_MASTER_GROUP';\nexport const NEXT_STEP = 'NEXT_STEP';\nexport const PREV_STEP = 'PREV_STEP';\nexport const SET_ERROR_MSG = 'SET_ERROR_MSG';\nexport const FETCH_TIME = 'FETCH_TIME';\n\nexport const SET_INITIAL_DATE = 'SET_INITIAL_DATE';\nexport const SET_SELECTED_DATE_TIME_LIST = 'SET_SELECTED_DATE_TIME_LIST';\nexport const SELECT_TIME = 'SELECT_TIME';\nexport const SET_DATE_TIME_STRING = 'SET_DATE_TIME_STRING';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../action/actionTypes';\n\nconst initialState = {\n    chineseName: '',\n    phoneNumber: '',\n    introducer: '',\n    age: '',\n    city: '',\n    gender: '',\n    district: '',\n    unfilled_blanks: [],\n    masterId: '',   \n    masterGid: null,\n    masterName: '',\n    step: 'info_page',\n    selectedDate_timeList: null,\n    datetime_string: null,\n    isFetchingTime: false,\n    line_id: null,\n    line_data_status: null,\n    errMsg: null\n}\n\nconst reducer = ( state = initialState , action ) => {\n    switch(action.type){\n        case actionTypes.SET_INFO_CONTENT: \n            const cloned_state = { ... state };\n            cloned_state[action.infoType] = action.updatedValue;\n            return cloned_state;\n\n        case actionTypes.CHANGE_NAME:\n            if (action.language_of_name === 'chineseName'){\n                return {\n                    ...state,\n                    chineseName: action.updatedValue\n                };\n            } else if (action.language_of_name === 'phoneNumber'){\n                return {\n                    ...state,\n                    phoneNumber: action.updatedValue\n                };\n            } else if (action.language_of_name === 'introducer'){\n                return {\n                    ...state,\n                    introducer: action.updatedValue\n                };\n            } else {\n                return state;\n            }\n        break;\n        \n        case actionTypes.DROP_DOWN_SELECT:\n            return {\n                ...state,\n                [action.selection_name]: action.value\n            }\n\n        case actionTypes.SELECT_MASTER_GROUP:\n            return {\n                ...state,\n                masterGid: action.masterGid,\n                masterName: action.masterName,\n                step: 'time_select'\n            }\n        break;\n\n        case actionTypes.NEXT_STEP:\n            if (state.step === 'info_page'){\n                const info_validate = () => {\n                    const info_list = [ 'chineseName', 'phoneNumber', 'gender', 'age', 'city', 'district' ];\n                    const unfilled_infos = [];\n                    info_list.forEach((info) => {\n                        console.log(state[info]);\n                        if ( !state[info] ){\n                            unfilled_infos.push(info)\n                        }\n                    })\n\n                    if (!unfilled_infos.length){\n                        return 'passed';\n                    } else {\n                        return unfilled_infos;\n                    }\n                }\n\n                if ( info_validate() === 'passed' ){\n                    return {\n                        ...state,\n                        step: 'teacher_select'\n                    }\n                } else {\n                    return {\n                        ...state,\n                        unfilled_blanks: info_validate()\n                    }\n                }\n            }\n\n        case actionTypes.PREV_STEP:\n            if (state.step === 'teacher_select'){\n                return {\n                    ...state,\n                    step: 'info_page',\n                    teacherName: ''\n                }\n            } else if (state.step === 'time_select'){\n                return {\n                    ...state,\n                    step: 'teacher_select',\n                    classTime: '',\n                    selectedDate_timeList: null,\n                    datetime_string: null,\n                }\n            } else {\n                return state;\n            }\n        break;\n\n        case actionTypes.SET_INITIAL_DATE:\n            return {\n                ...state,\n                year: action.year,\n                month: action.month,\n                date: action.date\n            }\n        break;\n\n        case actionTypes.SET_DATE_TIME_STRING:\n            return {\n                ...state,\n                datetime_string: action.datetime_string\n            }\n\n        case actionTypes.SET_SELECTED_DATE_TIME_LIST:\n            return {\n                ...state,\n                selectedDate_timeList: action.timeList\n            }\n\n        case actionTypes.SET_ERROR_MSG: \n            return {\n                ...state,\n                errMsg: action.errMsg\n            }\n\n        case actionTypes.FETCH_TIME:\n            return {\n                ...state,\n                isFetchingTime: action.isFetching\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\n\n\nimport reducer from './store/reducer/reducer';\n\nconst store = createStore(reducer);\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}